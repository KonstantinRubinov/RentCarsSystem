//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RentCars.EntityDataBase
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using System.Data.Entity.Validation;
    using System.Diagnostics;

    public partial class RentCarEntities : DbContext
    {
        public RentCarEntities() : base("name=RentCarEntities")
        {
        }

		public override int SaveChanges()
		{
			try
			{
				return base.SaveChanges();
			}
			catch (DbEntityValidationException ex)
			{
				// Retrieve the error messages as a list of strings.
				var errorMessages = ex.EntityValidationErrors
						.SelectMany(x => x.ValidationErrors)
						.Select(x => x.ErrorMessage);

				// Join the list to a single string.
				var fullErrorMessage = string.Join("; ", errorMessages);
				Debug.WriteLine("DbEntityValidationException: " + errorMessages);
				throw new DbEntityValidationException(fullErrorMessage, ex.EntityValidationErrors);
			}
		}

		protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ALLCARTYPE> ALLCARTYPES { get; set; }
        public virtual DbSet<BRANCH> BRANCHES { get; set; }
        public virtual DbSet<CARFORRENT> CARFORRENTS { get; set; }
        public virtual DbSet<CAR> CARS { get; set; }
        public virtual DbSet<MESSAGE> MESSAGES { get; set; }
        public virtual DbSet<ROLE> ROLES { get; set; }
        public virtual DbSet<USER> USERS { get; set; }
    
        public virtual ObjectResult<AddBranch_Result> AddBranch(string branchAddress, Nullable<double> branchLat, Nullable<double> branchLng, string branchName)
        {
            var branchAddressParameter = branchAddress != null ?
                new ObjectParameter("branchAddress", branchAddress) :
                new ObjectParameter("branchAddress", typeof(string));
    
            var branchLatParameter = branchLat.HasValue ?
                new ObjectParameter("branchLat", branchLat) :
                new ObjectParameter("branchLat", typeof(double));
    
            var branchLngParameter = branchLng.HasValue ?
                new ObjectParameter("branchLng", branchLng) :
                new ObjectParameter("branchLng", typeof(double));
    
            var branchNameParameter = branchName != null ?
                new ObjectParameter("branchName", branchName) :
                new ObjectParameter("branchName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddBranch_Result>("AddBranch", branchAddressParameter, branchLatParameter, branchLngParameter, branchNameParameter);
        }
    
        public virtual ObjectResult<AddCar_Result> AddCar(Nullable<double> carKm, string carPicture, Nullable<bool> carInShape, Nullable<bool> carAvaliable, string carNumber, Nullable<int> carBranchID, Nullable<int> carTypeID)
        {
            var carKmParameter = carKm.HasValue ?
                new ObjectParameter("carKm", carKm) :
                new ObjectParameter("carKm", typeof(double));
    
            var carPictureParameter = carPicture != null ?
                new ObjectParameter("carPicture", carPicture) :
                new ObjectParameter("carPicture", typeof(string));
    
            var carInShapeParameter = carInShape.HasValue ?
                new ObjectParameter("carInShape", carInShape) :
                new ObjectParameter("carInShape", typeof(bool));
    
            var carAvaliableParameter = carAvaliable.HasValue ?
                new ObjectParameter("carAvaliable", carAvaliable) :
                new ObjectParameter("carAvaliable", typeof(bool));
    
            var carNumberParameter = carNumber != null ?
                new ObjectParameter("carNumber", carNumber) :
                new ObjectParameter("carNumber", typeof(string));
    
            var carBranchIDParameter = carBranchID.HasValue ?
                new ObjectParameter("carBranchID", carBranchID) :
                new ObjectParameter("carBranchID", typeof(int));
    
            var carTypeIDParameter = carTypeID.HasValue ?
                new ObjectParameter("carTypeID", carTypeID) :
                new ObjectParameter("carTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddCar_Result>("AddCar", carKmParameter, carPictureParameter, carInShapeParameter, carAvaliableParameter, carNumberParameter, carBranchIDParameter, carTypeIDParameter);
        }
    
        public virtual ObjectResult<AddCarForRent_Result> AddCarForRent(Nullable<System.DateTime> rentStartDate, Nullable<System.DateTime> rentEndDate, Nullable<System.DateTime> rentRealEndDate, string userID, string carNumber)
        {
            var rentStartDateParameter = rentStartDate.HasValue ?
                new ObjectParameter("rentStartDate", rentStartDate) :
                new ObjectParameter("rentStartDate", typeof(System.DateTime));
    
            var rentEndDateParameter = rentEndDate.HasValue ?
                new ObjectParameter("rentEndDate", rentEndDate) :
                new ObjectParameter("rentEndDate", typeof(System.DateTime));
    
            var rentRealEndDateParameter = rentRealEndDate.HasValue ?
                new ObjectParameter("rentRealEndDate", rentRealEndDate) :
                new ObjectParameter("rentRealEndDate", typeof(System.DateTime));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            var carNumberParameter = carNumber != null ?
                new ObjectParameter("carNumber", carNumber) :
                new ObjectParameter("carNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddCarForRent_Result>("AddCarForRent", rentStartDateParameter, rentEndDateParameter, rentRealEndDateParameter, userIDParameter, carNumberParameter);
        }
    
        public virtual ObjectResult<AddCarType_Result> AddCarType(string thisCarType, string carFirm, string carModel, Nullable<decimal> carDayPrice, Nullable<decimal> carLatePrice, Nullable<int> carYear, string carGear)
        {
            var thisCarTypeParameter = thisCarType != null ?
                new ObjectParameter("thisCarType", thisCarType) :
                new ObjectParameter("thisCarType", typeof(string));
    
            var carFirmParameter = carFirm != null ?
                new ObjectParameter("carFirm", carFirm) :
                new ObjectParameter("carFirm", typeof(string));
    
            var carModelParameter = carModel != null ?
                new ObjectParameter("carModel", carModel) :
                new ObjectParameter("carModel", typeof(string));
    
            var carDayPriceParameter = carDayPrice.HasValue ?
                new ObjectParameter("carDayPrice", carDayPrice) :
                new ObjectParameter("carDayPrice", typeof(decimal));
    
            var carLatePriceParameter = carLatePrice.HasValue ?
                new ObjectParameter("carLatePrice", carLatePrice) :
                new ObjectParameter("carLatePrice", typeof(decimal));
    
            var carYearParameter = carYear.HasValue ?
                new ObjectParameter("carYear", carYear) :
                new ObjectParameter("carYear", typeof(int));
    
            var carGearParameter = carGear != null ?
                new ObjectParameter("carGear", carGear) :
                new ObjectParameter("carGear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddCarType_Result>("AddCarType", thisCarTypeParameter, carFirmParameter, carModelParameter, carDayPriceParameter, carLatePriceParameter, carYearParameter, carGearParameter);
        }
    
        public virtual ObjectResult<AddMessage_Result> AddMessage(string userID, string userFirstName, string userLastName, string userEmail, string userMessage)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            var userFirstNameParameter = userFirstName != null ?
                new ObjectParameter("userFirstName", userFirstName) :
                new ObjectParameter("userFirstName", typeof(string));
    
            var userLastNameParameter = userLastName != null ?
                new ObjectParameter("userLastName", userLastName) :
                new ObjectParameter("userLastName", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("userEmail", userEmail) :
                new ObjectParameter("userEmail", typeof(string));
    
            var userMessageParameter = userMessage != null ?
                new ObjectParameter("userMessage", userMessage) :
                new ObjectParameter("userMessage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddMessage_Result>("AddMessage", userIDParameter, userFirstNameParameter, userLastNameParameter, userEmailParameter, userMessageParameter);
        }
    
        public virtual ObjectResult<AddRole_Result> AddRole(Nullable<int> userLevel, string userRole)
        {
            var userLevelParameter = userLevel.HasValue ?
                new ObjectParameter("userLevel", userLevel) :
                new ObjectParameter("userLevel", typeof(int));
    
            var userRoleParameter = userRole != null ?
                new ObjectParameter("userRole", userRole) :
                new ObjectParameter("userRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddRole_Result>("AddRole", userLevelParameter, userRoleParameter);
        }
    
        public virtual ObjectResult<AddUser_Result> AddUser(string userID, string userFirstName, string userLastName, string userNickName, Nullable<System.DateTime> userBirthDate, string userGender, string userEmail, string userPassword, string userPicture, Nullable<int> userLevel)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            var userFirstNameParameter = userFirstName != null ?
                new ObjectParameter("userFirstName", userFirstName) :
                new ObjectParameter("userFirstName", typeof(string));
    
            var userLastNameParameter = userLastName != null ?
                new ObjectParameter("userLastName", userLastName) :
                new ObjectParameter("userLastName", typeof(string));
    
            var userNickNameParameter = userNickName != null ?
                new ObjectParameter("userNickName", userNickName) :
                new ObjectParameter("userNickName", typeof(string));
    
            var userBirthDateParameter = userBirthDate.HasValue ?
                new ObjectParameter("userBirthDate", userBirthDate) :
                new ObjectParameter("userBirthDate", typeof(System.DateTime));
    
            var userGenderParameter = userGender != null ?
                new ObjectParameter("userGender", userGender) :
                new ObjectParameter("userGender", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("userEmail", userEmail) :
                new ObjectParameter("userEmail", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("userPassword", userPassword) :
                new ObjectParameter("userPassword", typeof(string));
    
            var userPictureParameter = userPicture != null ?
                new ObjectParameter("userPicture", userPicture) :
                new ObjectParameter("userPicture", typeof(string));
    
            var userLevelParameter = userLevel.HasValue ?
                new ObjectParameter("userLevel", userLevel) :
                new ObjectParameter("userLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddUser_Result>("AddUser", userIDParameter, userFirstNameParameter, userLastNameParameter, userNickNameParameter, userBirthDateParameter, userGenderParameter, userEmailParameter, userPasswordParameter, userPictureParameter, userLevelParameter);
        }
    
        public virtual int DeleteBranch(Nullable<int> branchID)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("branchID", branchID) :
                new ObjectParameter("branchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBranch", branchIDParameter);
        }
    
        public virtual ObjectResult<string> DeleteCar(string carNumber)
        {
            var carNumberParameter = carNumber != null ?
                new ObjectParameter("carNumber", carNumber) :
                new ObjectParameter("carNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeleteCar", carNumberParameter);
        }
    
        public virtual int DeleteCarForRentByCar(string carNumber)
        {
            var carNumberParameter = carNumber != null ?
                new ObjectParameter("carNumber", carNumber) :
                new ObjectParameter("carNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCarForRentByCar", carNumberParameter);
        }
    
        public virtual int DeleteCarForRentByRent(Nullable<int> rentNumber)
        {
            var rentNumberParameter = rentNumber.HasValue ?
                new ObjectParameter("rentNumber", rentNumber) :
                new ObjectParameter("rentNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCarForRentByRent", rentNumberParameter);
        }
    
        public virtual int DeleteCarTypeById(Nullable<int> carTypeID)
        {
            var carTypeIDParameter = carTypeID.HasValue ?
                new ObjectParameter("carTypeID", carTypeID) :
                new ObjectParameter("carTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCarTypeById", carTypeIDParameter);
        }
    
        public virtual int DeleteCarTypeByType(string thisCarType)
        {
            var thisCarTypeParameter = thisCarType != null ?
                new ObjectParameter("thisCarType", thisCarType) :
                new ObjectParameter("thisCarType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCarTypeByType", thisCarTypeParameter);
        }
    
        public virtual int DeleteMessage(Nullable<int> messageID)
        {
            var messageIDParameter = messageID.HasValue ?
                new ObjectParameter("messageID", messageID) :
                new ObjectParameter("messageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMessage", messageIDParameter);
        }
    
        public virtual int DeleteMessageByUser(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMessageByUser", userIDParameter);
        }
    
        public virtual int DeleteRole(Nullable<int> userLevel)
        {
            var userLevelParameter = userLevel.HasValue ?
                new ObjectParameter("userLevel", userLevel) :
                new ObjectParameter("userLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRole", userLevelParameter);
        }
    
        public virtual int DeleteRoleByRole(string userRole)
        {
            var userRoleParameter = userRole != null ?
                new ObjectParameter("userRole", userRole) :
                new ObjectParameter("userRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRoleByRole", userRoleParameter);
        }
    
        public virtual int DeleteUser(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", userIDParameter);
        }
    
        public virtual ObjectResult<GetAllBranches_Result> GetAllBranches()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllBranches_Result>("GetAllBranches");
        }
    
        public virtual ObjectResult<GetAllBranchesNamesIds_Result> GetAllBranchesNamesIds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllBranchesNamesIds_Result>("GetAllBranchesNamesIds");
        }
    
        public virtual ObjectResult<GetAllCarImagesAndNumberOfCars_Result> GetAllCarImagesAndNumberOfCars()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCarImagesAndNumberOfCars_Result>("GetAllCarImagesAndNumberOfCars");
        }
    
        public virtual ObjectResult<GetAllCars_Result> GetAllCars()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCars_Result>("GetAllCars");
        }
    
        public virtual ObjectResult<GetAllCarsBySearch_Result> GetAllCarsBySearch(Nullable<int> page, Nullable<int> carsNum, string searchText, string carFirm, string thisCarType, string carGear, Nullable<int> carYear)
        {
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var carsNumParameter = carsNum.HasValue ?
                new ObjectParameter("carsNum", carsNum) :
                new ObjectParameter("carsNum", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("searchText", searchText) :
                new ObjectParameter("searchText", typeof(string));
    
            var carFirmParameter = carFirm != null ?
                new ObjectParameter("carFirm", carFirm) :
                new ObjectParameter("carFirm", typeof(string));
    
            var thisCarTypeParameter = thisCarType != null ?
                new ObjectParameter("thisCarType", thisCarType) :
                new ObjectParameter("thisCarType", typeof(string));
    
            var carGearParameter = carGear != null ?
                new ObjectParameter("carGear", carGear) :
                new ObjectParameter("carGear", typeof(string));
    
            var carYearParameter = carYear.HasValue ?
                new ObjectParameter("carYear", carYear) :
                new ObjectParameter("carYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCarsBySearch_Result>("GetAllCarsBySearch", pageParameter, carsNumParameter, searchTextParameter, carFirmParameter, thisCarTypeParameter, carGearParameter, carYearParameter);
        }
    
        public virtual ObjectResult<GetAllCarsForRent_Result> GetAllCarsForRent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCarsForRent_Result>("GetAllCarsForRent");
        }
    
        public virtual ObjectResult<GetAllCarsForRentByCarNumber_Result> GetAllCarsForRentByCarNumber(string carNumber)
        {
            var carNumberParameter = carNumber != null ?
                new ObjectParameter("carNumber", carNumber) :
                new ObjectParameter("carNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCarsForRentByCarNumber_Result>("GetAllCarsForRentByCarNumber", carNumberParameter);
        }
    
        public virtual ObjectResult<GetAllCarsForRentByUserId_Result> GetAllCarsForRentByUserId(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCarsForRentByUserId_Result>("GetAllCarsForRentByUserId", userIDParameter);
        }
    
        public virtual ObjectResult<GetAllCarTypes_Result> GetAllCarTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCarTypes_Result>("GetAllCarTypes");
        }
    
        public virtual ObjectResult<GetAllCarTypesIds_Result> GetAllCarTypesIds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCarTypesIds_Result>("GetAllCarTypesIds");
        }
    
        public virtual ObjectResult<GetAllMessages_Result> GetAllMessages()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllMessages_Result>("GetAllMessages");
        }
    
        public virtual ObjectResult<GetAllRoles_Result> GetAllRoles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllRoles_Result>("GetAllRoles");
        }
    
        public virtual ObjectResult<GetAllUsers_Result> GetAllUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllUsers_Result>("GetAllUsers");
        }
    
        public virtual ObjectResult<GetCarAllDataBySearch_Result> GetCarAllDataBySearch(string carNumber)
        {
            var carNumberParameter = carNumber != null ?
                new ObjectParameter("carNumber", carNumber) :
                new ObjectParameter("carNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCarAllDataBySearch_Result>("GetCarAllDataBySearch", carNumberParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetCarDayPriceBySearch(string carNumber)
        {
            var carNumberParameter = carNumber != null ?
                new ObjectParameter("carNumber", carNumber) :
                new ObjectParameter("carNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetCarDayPriceBySearch", carNumberParameter);
        }
    
        public virtual ObjectResult<GetMessagesByUserId_Result> GetMessagesByUserId(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMessagesByUserId_Result>("GetMessagesByUserId", userIDParameter);
        }
    
        public virtual ObjectResult<GetNumberOfCarWithImage_Result> GetNumberOfCarWithImage(string carPicture)
        {
            var carPictureParameter = carPicture != null ?
                new ObjectParameter("carPicture", carPicture) :
                new ObjectParameter("carPicture", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNumberOfCarWithImage_Result>("GetNumberOfCarWithImage", carPictureParameter);
        }
    
        public virtual ObjectResult<GetOneBranchById_Result> GetOneBranchById(Nullable<int> branchID)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("branchID", branchID) :
                new ObjectParameter("branchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOneBranchById_Result>("GetOneBranchById", branchIDParameter);
        }
    
        public virtual ObjectResult<GetOneCarByNumber_Result> GetOneCarByNumber(string carNumber)
        {
            var carNumberParameter = carNumber != null ?
                new ObjectParameter("carNumber", carNumber) :
                new ObjectParameter("carNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOneCarByNumber_Result>("GetOneCarByNumber", carNumberParameter);
        }
    
        public virtual ObjectResult<GetOneCarForRentByRentNumber_Result> GetOneCarForRentByRentNumber(Nullable<int> rentNumber)
        {
            var rentNumberParameter = rentNumber.HasValue ?
                new ObjectParameter("rentNumber", rentNumber) :
                new ObjectParameter("rentNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOneCarForRentByRentNumber_Result>("GetOneCarForRentByRentNumber", rentNumberParameter);
        }
    
        public virtual ObjectResult<GetOneCarType_Result> GetOneCarType(Nullable<int> carTypeID)
        {
            var carTypeIDParameter = carTypeID.HasValue ?
                new ObjectParameter("carTypeID", carTypeID) :
                new ObjectParameter("carTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOneCarType_Result>("GetOneCarType", carTypeIDParameter);
        }
    
        public virtual ObjectResult<GetOneMessageById_Result> GetOneMessageById(Nullable<int> messageID)
        {
            var messageIDParameter = messageID.HasValue ?
                new ObjectParameter("messageID", messageID) :
                new ObjectParameter("messageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOneMessageById_Result>("GetOneMessageById", messageIDParameter);
        }
    
        public virtual ObjectResult<GetOneRole_Result> GetOneRole(Nullable<int> userLevel)
        {
            var userLevelParameter = userLevel.HasValue ?
                new ObjectParameter("userLevel", userLevel) :
                new ObjectParameter("userLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOneRole_Result>("GetOneRole", userLevelParameter);
        }
    
        public virtual ObjectResult<GetOneRoleByRole_Result> GetOneRoleByRole(string userRole)
        {
            var userRoleParameter = userRole != null ?
                new ObjectParameter("userRole", userRole) :
                new ObjectParameter("userRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOneRoleByRole_Result>("GetOneRoleByRole", userRoleParameter);
        }
    
        public virtual ObjectResult<GetOneUserById_Result> GetOneUserById(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOneUserById_Result>("GetOneUserById", userIDParameter);
        }
    
        public virtual ObjectResult<GetOneUserByLogin_Result> GetOneUserByLogin(string userNickName, string userPassword)
        {
            var userNickNameParameter = userNickName != null ?
                new ObjectParameter("userNickName", userNickName) :
                new ObjectParameter("userNickName", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("userPassword", userPassword) :
                new ObjectParameter("userPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOneUserByLogin_Result>("GetOneUserByLogin", userNickNameParameter, userPasswordParameter);
        }
    
        public virtual ObjectResult<GetOneUserByName_Result> GetOneUserByName(string userNickName)
        {
            var userNickNameParameter = userNickName != null ?
                new ObjectParameter("userNickName", userNickName) :
                new ObjectParameter("userNickName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOneUserByName_Result>("GetOneUserByName", userNickNameParameter);
        }
    
        public virtual ObjectResult<GetOneUserForMessageById_Result> GetOneUserForMessageById(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOneUserForMessageById_Result>("GetOneUserForMessageById", userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IsNameTaken(string userNickName)
        {
            var userNickNameParameter = userNickName != null ?
                new ObjectParameter("userNickName", userNickName) :
                new ObjectParameter("userNickName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IsNameTaken", userNickNameParameter);
        }
    
        public virtual ObjectResult<queryUsersString_Result> queryUsersString()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<queryUsersString_Result>("queryUsersString");
        }
    
        public virtual ObjectResult<ReturnUserByNameLevel_Result> ReturnUserByNameLevel(string userNickName, Nullable<int> userLevel)
        {
            var userNickNameParameter = userNickName != null ?
                new ObjectParameter("userNickName", userNickName) :
                new ObjectParameter("userNickName", typeof(string));
    
            var userLevelParameter = userLevel.HasValue ?
                new ObjectParameter("userLevel", userLevel) :
                new ObjectParameter("userLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReturnUserByNameLevel_Result>("ReturnUserByNameLevel", userNickNameParameter, userLevelParameter);
        }
    
        public virtual ObjectResult<ReturnUserByNamePassword_Result> ReturnUserByNamePassword(string userNickName, string userPassword)
        {
            var userNickNameParameter = userNickName != null ?
                new ObjectParameter("userNickName", userNickName) :
                new ObjectParameter("userNickName", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("userPassword", userPassword) :
                new ObjectParameter("userPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReturnUserByNamePassword_Result>("ReturnUserByNamePassword", userNickNameParameter, userPasswordParameter);
        }
    
        public virtual ObjectResult<string> ReturnUserIdByUserPass(string userPassword)
        {
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("userPassword", userPassword) :
                new ObjectParameter("userPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ReturnUserIdByUserPass", userPasswordParameter);
        }
    
        public virtual ObjectResult<UpdateBranch_Result> UpdateBranch(string branchAddress, Nullable<double> branchLat, Nullable<double> branchLng, string branchName, Nullable<int> branchID)
        {
            var branchAddressParameter = branchAddress != null ?
                new ObjectParameter("branchAddress", branchAddress) :
                new ObjectParameter("branchAddress", typeof(string));
    
            var branchLatParameter = branchLat.HasValue ?
                new ObjectParameter("branchLat", branchLat) :
                new ObjectParameter("branchLat", typeof(double));
    
            var branchLngParameter = branchLng.HasValue ?
                new ObjectParameter("branchLng", branchLng) :
                new ObjectParameter("branchLng", typeof(double));
    
            var branchNameParameter = branchName != null ?
                new ObjectParameter("branchName", branchName) :
                new ObjectParameter("branchName", typeof(string));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("branchID", branchID) :
                new ObjectParameter("branchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateBranch_Result>("UpdateBranch", branchAddressParameter, branchLatParameter, branchLngParameter, branchNameParameter, branchIDParameter);
        }
    
        public virtual ObjectResult<UpdateCar_Result> UpdateCar(Nullable<double> carKm, string carPicture, Nullable<bool> carInShape, Nullable<bool> carAvaliable, string carNumber, Nullable<int> carBranchID, Nullable<int> carTypeID)
        {
            var carKmParameter = carKm.HasValue ?
                new ObjectParameter("carKm", carKm) :
                new ObjectParameter("carKm", typeof(double));
    
            var carPictureParameter = carPicture != null ?
                new ObjectParameter("carPicture", carPicture) :
                new ObjectParameter("carPicture", typeof(string));
    
            var carInShapeParameter = carInShape.HasValue ?
                new ObjectParameter("carInShape", carInShape) :
                new ObjectParameter("carInShape", typeof(bool));
    
            var carAvaliableParameter = carAvaliable.HasValue ?
                new ObjectParameter("carAvaliable", carAvaliable) :
                new ObjectParameter("carAvaliable", typeof(bool));
    
            var carNumberParameter = carNumber != null ?
                new ObjectParameter("carNumber", carNumber) :
                new ObjectParameter("carNumber", typeof(string));
    
            var carBranchIDParameter = carBranchID.HasValue ?
                new ObjectParameter("carBranchID", carBranchID) :
                new ObjectParameter("carBranchID", typeof(int));
    
            var carTypeIDParameter = carTypeID.HasValue ?
                new ObjectParameter("carTypeID", carTypeID) :
                new ObjectParameter("carTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateCar_Result>("UpdateCar", carKmParameter, carPictureParameter, carInShapeParameter, carAvaliableParameter, carNumberParameter, carBranchIDParameter, carTypeIDParameter);
        }
    
        public virtual ObjectResult<UpdateCarForRent_Result> UpdateCarForRent(Nullable<System.DateTime> rentStartDate, Nullable<System.DateTime> rentEndDate, Nullable<System.DateTime> rentRealEndDate, string userID, string carNumber, Nullable<int> rentNumber)
        {
            var rentStartDateParameter = rentStartDate.HasValue ?
                new ObjectParameter("rentStartDate", rentStartDate) :
                new ObjectParameter("rentStartDate", typeof(System.DateTime));
    
            var rentEndDateParameter = rentEndDate.HasValue ?
                new ObjectParameter("rentEndDate", rentEndDate) :
                new ObjectParameter("rentEndDate", typeof(System.DateTime));
    
            var rentRealEndDateParameter = rentRealEndDate.HasValue ?
                new ObjectParameter("rentRealEndDate", rentRealEndDate) :
                new ObjectParameter("rentRealEndDate", typeof(System.DateTime));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            var carNumberParameter = carNumber != null ?
                new ObjectParameter("carNumber", carNumber) :
                new ObjectParameter("carNumber", typeof(string));
    
            var rentNumberParameter = rentNumber.HasValue ?
                new ObjectParameter("rentNumber", rentNumber) :
                new ObjectParameter("rentNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateCarForRent_Result>("UpdateCarForRent", rentStartDateParameter, rentEndDateParameter, rentRealEndDateParameter, userIDParameter, carNumberParameter, rentNumberParameter);
        }
    
        public virtual ObjectResult<UpdateCarType_Result> UpdateCarType(string thisCarType, string carFirm, string carModel, Nullable<decimal> carDayPrice, Nullable<decimal> carLatePrice, Nullable<int> carYear, string carGear, Nullable<int> carTypeID)
        {
            var thisCarTypeParameter = thisCarType != null ?
                new ObjectParameter("thisCarType", thisCarType) :
                new ObjectParameter("thisCarType", typeof(string));
    
            var carFirmParameter = carFirm != null ?
                new ObjectParameter("carFirm", carFirm) :
                new ObjectParameter("carFirm", typeof(string));
    
            var carModelParameter = carModel != null ?
                new ObjectParameter("carModel", carModel) :
                new ObjectParameter("carModel", typeof(string));
    
            var carDayPriceParameter = carDayPrice.HasValue ?
                new ObjectParameter("carDayPrice", carDayPrice) :
                new ObjectParameter("carDayPrice", typeof(decimal));
    
            var carLatePriceParameter = carLatePrice.HasValue ?
                new ObjectParameter("carLatePrice", carLatePrice) :
                new ObjectParameter("carLatePrice", typeof(decimal));
    
            var carYearParameter = carYear.HasValue ?
                new ObjectParameter("carYear", carYear) :
                new ObjectParameter("carYear", typeof(int));
    
            var carGearParameter = carGear != null ?
                new ObjectParameter("carGear", carGear) :
                new ObjectParameter("carGear", typeof(string));
    
            var carTypeIDParameter = carTypeID.HasValue ?
                new ObjectParameter("carTypeID", carTypeID) :
                new ObjectParameter("carTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateCarType_Result>("UpdateCarType", thisCarTypeParameter, carFirmParameter, carModelParameter, carDayPriceParameter, carLatePriceParameter, carYearParameter, carGearParameter, carTypeIDParameter);
        }
    
        public virtual ObjectResult<UpdateMessage_Result> UpdateMessage(Nullable<int> messageID, string userID, string userFirstName, string userLastName, string userEmail, string userMessage)
        {
            var messageIDParameter = messageID.HasValue ?
                new ObjectParameter("messageID", messageID) :
                new ObjectParameter("messageID", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            var userFirstNameParameter = userFirstName != null ?
                new ObjectParameter("userFirstName", userFirstName) :
                new ObjectParameter("userFirstName", typeof(string));
    
            var userLastNameParameter = userLastName != null ?
                new ObjectParameter("userLastName", userLastName) :
                new ObjectParameter("userLastName", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("userEmail", userEmail) :
                new ObjectParameter("userEmail", typeof(string));
    
            var userMessageParameter = userMessage != null ?
                new ObjectParameter("userMessage", userMessage) :
                new ObjectParameter("userMessage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateMessage_Result>("UpdateMessage", messageIDParameter, userIDParameter, userFirstNameParameter, userLastNameParameter, userEmailParameter, userMessageParameter);
        }
    
        public virtual ObjectResult<UpdateRole_Result> UpdateRole(Nullable<int> userLevel, string userRole)
        {
            var userLevelParameter = userLevel.HasValue ?
                new ObjectParameter("userLevel", userLevel) :
                new ObjectParameter("userLevel", typeof(int));
    
            var userRoleParameter = userRole != null ?
                new ObjectParameter("userRole", userRole) :
                new ObjectParameter("userRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateRole_Result>("UpdateRole", userLevelParameter, userRoleParameter);
        }
    
        public virtual ObjectResult<UpdateUser_Result> UpdateUser(string userID, string userFirstName, string userLastName, string userNickName, Nullable<System.DateTime> userBirthDate, string userGender, string userEmail, string userPassword, string userPicture, Nullable<int> userLevel)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            var userFirstNameParameter = userFirstName != null ?
                new ObjectParameter("userFirstName", userFirstName) :
                new ObjectParameter("userFirstName", typeof(string));
    
            var userLastNameParameter = userLastName != null ?
                new ObjectParameter("userLastName", userLastName) :
                new ObjectParameter("userLastName", typeof(string));
    
            var userNickNameParameter = userNickName != null ?
                new ObjectParameter("userNickName", userNickName) :
                new ObjectParameter("userNickName", typeof(string));
    
            var userBirthDateParameter = userBirthDate.HasValue ?
                new ObjectParameter("userBirthDate", userBirthDate) :
                new ObjectParameter("userBirthDate", typeof(System.DateTime));
    
            var userGenderParameter = userGender != null ?
                new ObjectParameter("userGender", userGender) :
                new ObjectParameter("userGender", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("userEmail", userEmail) :
                new ObjectParameter("userEmail", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("userPassword", userPassword) :
                new ObjectParameter("userPassword", typeof(string));
    
            var userPictureParameter = userPicture != null ?
                new ObjectParameter("userPicture", userPicture) :
                new ObjectParameter("userPicture", typeof(string));
    
            var userLevelParameter = userLevel.HasValue ?
                new ObjectParameter("userLevel", userLevel) :
                new ObjectParameter("userLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateUser_Result>("UpdateUser", userIDParameter, userFirstNameParameter, userLastNameParameter, userNickNameParameter, userBirthDateParameter, userGenderParameter, userEmailParameter, userPasswordParameter, userPictureParameter, userLevelParameter);
        }
    
        public virtual ObjectResult<UploadUserImage_Result> UploadUserImage(string userID, string userPicture)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            var userPictureParameter = userPicture != null ?
                new ObjectParameter("userPicture", userPicture) :
                new ObjectParameter("userPicture", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UploadUserImage_Result>("UploadUserImage", userIDParameter, userPictureParameter);
        }
    }
}
